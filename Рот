import random

class Ship:
    def __init__(self, points):
        self.points = points

class Board:
    def __init__(self, ships):
        self.grid = [['O' for _ in range(6)] for _ in range(6)]
        self.ships = ships
        self.place_ships()

    def place_ships(self):
        for ship in self.ships:
            for point in ship.points:
                x, y = point
                self.grid[x][y] = 'â– '

    def display(self):
        print(" | 1 | 2 | 3 | 4 | 5 | 6 | ")
        for i in range(6):
            print(i + 1, "|", " | ".join(self.grid[i]), "|")

class Player:
    def __init__(self, board):
        self.board = board
        self.shots = set()

    def make_move(self):
        while True:
            try:
                move = input("Enter your move (row,column): ")
                x, y = map(int, move.split(","))
                if (x, y) in self.shots:
                    raise ValueError("You've already shot there!")
                if not (1 <= x <= 6 and 1 <= y <= 6):
                    raise ValueError("Invalid coordinates!")
                self.shots.add((x, y))
                return x, y
            except ValueError as ve:
                print(ve)

class Computer(Player):
    def __init__(self, board):
        super().__init__(board)

    def make_move(self):
        x, y = random.randint(1, 6), random.randint(1, 6)
        while (x, y) in self.shots:
            x, y = random.randint(1, 6), random.randint(1, 6)
        self.shots.add((x, y))
        return x, y

def main():
    ship_points = [
        [(1, 1), (1, 2), (1, 3)],
        [(2, 1), (2, 2)],
        [(2, 4), (2, 5)],
        [(3, 1), (3, 2)],
        [(3, 4), (3, 5)],
        [(4, 1)],
        [(4, 3)],
        [(4, 5)],
        [(4, 6)],
        [(5, 2)],
        [(5, 4)],
        [(6, 2)],
        [(6, 3)],
        [(6, 4)],
        [(6, 6)]
    ]

    ships = [Ship(points) for points in ship_points]
    player_board = Board(ships)
    computer_board = Board([])  # Computer's board won't have ships visible to the player

    player = Player(player_board)
    computer = Computer(computer_board)

    while True:
        print("Your board:")
        player_board.display()

        print("\nComputer's board:")
        computer_board.display()

        print("\nYour turn:")
        player_move = player.make_move()

        # Check if player's move hits any ship
        hit_ship = False
        for ship in computer_board.ships:
            if player_move in ship.points:
                hit_ship = True
                ship.points.remove(player_move)
                if not ship.points:
                    print("You sunk a ship!")
                    computer_board.grid[player_move[0] - 1][player_move[1] - 1] = 'X'
                else:
                    print("You hit a ship!")
                    computer_board.grid[player_move[0] - 1][player_move[1] - 1] = 'X'
                break
        if not hit_ship:
            print("You missed!")
            computer_board.grid[player_move[0] - 1][player_move[1] - 1] = 'T'

        # Check if player won
        if all(not ship.points for ship in computer_board.ships):
            print("Congratulations! You win!")
            break

        print("\nComputer's turn:")
        computer_move = computer.make_move()

        # Check if computer's move hits any ship
        hit_ship = False
        for ship in player_board.ships:
            if computer_move in ship.points:
                hit_ship = True
                ship.points.remove(computer_move)
                if not ship.points:
                    print("Computer sunk your ship!")
                    player_board.grid[computer_move[0] - 1][computer_move[1] - 1] = 'X'
                else:
                    print("Computer hit your ship!")
                    player_board.grid[computer_move[0] - 1][computer_move[1] - 1] = 'X'
                break
        if not hit_ship:
            print("Computer missed!")
            player_board.grid[computer_move[0] - 1][computer_move[1] - 1] = 'T'

        # Check if computer won
        if all(not ship.points for ship in player_board.ships):
            print("Computer wins! Better luck next time!")
            break

if __name__ == "__main__":
    main()
