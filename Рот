import random

class Ship:
    def __init__(self, points):
        self.points = points

class Board:
    def __init__(self, ships):
        self.ships = ships
        self.size = 6
        self.grid = [['O' for _ in range(self.size)] for _ in range(self.size)]

    def display(self):
        print("  | 1 | 2 | 3 | 4 | 5 | 6 | ")
        for i in range(self.size):
            print(f"{i+1} | {' | '.join(self.grid[i])} |")

    def place_ships(self):
        for ship in self.ships:
            for point in ship.points:
                x, y = point
                self.grid[x][y] = '■'

    def check_hit(self, x, y):
        if self.grid[x][y] == '■':
            self.grid[x][y] = 'X'
            return True
        else:
            self.grid[x][y] = 'T'
            return False

def generate_ships():
    ships = []
    while len(ships) < 7:  # 1x3, 2x2, 4x1
        ship_points = set()
        size = 3 if len(ships) == 0 else 2 if len(ships) < 3 else 1
        orientation = random.choice(['horizontal', 'vertical'])
        x = random.randint(0, 5)
        y = random.randint(0, 5)
        for i in range(size):
            if orientation == 'horizontal':
                if (x, y+i) in ship_points:
                    break
                else:
                    ship_points.add((x, y+i))
            else:
                if (x+i, y) in ship_points:
                    break
                else:
                    ship_points.add((x+i, y))
        else:
            if all(point not in ships for point in ship_points):
                ships.append(Ship(ship_points))
    return ships

def player_turn(board):
    while True:
        try:
            move = input("Enter coordinates to shoot (e.g. 'row,column'): ").split(',')
            x, y = int(move[0]) - 1, int(move[1]) - 1
            if not (0 <= x <= 5 and 0 <= y <= 5):
                raise ValueError("Coordinates out of range!")
            if board.check_hit(x, y):
                print("Hit!")
            else:
                print("Miss!")
            break
        except (ValueError, IndexError):
            print("Invalid input. Please enter valid coordinates.")

def computer_turn(board):
    x, y = random.randint(0, 5), random.randint(0, 5)
    while board.grid[x][y] == 'X' or board.grid[x][y] == 'T':
        x, y = random.randint(0, 5), random.randint(0, 5)
    if board.check_hit(x, y):
        print("Computer hit at", x+1, y+1)
    else:
        print("Computer missed at", x+1, y+1)

def game():
    player_board = Board(generate_ships())
    computer_board = Board(generate_ships())

    player_board.place_ships()
    computer_board.place_ships()

    while True:
        print("\nPlayer's Turn:")
        player_board.display()
        player_turn(player_board)
        if all('X' in row or 'T' in row for row in computer_board.grid):
            print("Congratulations! You won!")
            break

        print("\nComputer's Turn:")
        computer_turn(computer_board)
        if all('X' in row or 'T' in row for row in player_board.grid):
            print("Computer won! Better luck next time.")
            break

game()
