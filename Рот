import random

class Ship:
    def __init__(self, points):
        self.points = points

class Board:
    def __init__(self, ships):
        self.grid = [['O' for _ in range(6)] for _ in range(6)]
        self.ships = ships
        self.remaining_ships = sum(len(ship.points) for ship in ships)

        for ship in ships:
            for x, y in ship.points:
                self.grid[x][y] = 'â– '

    def display(self):
        print("  | 1 | 2 | 3 | 4 | 5 | 6 | ")
        for i in range(6):
            row = " | ".join(self.grid[i])
            print(f"{i+1} | {row} |")

    def check_hit(self, x, y):
        for ship in self.ships:
            if (x, y) in ship.points:
                ship.points.remove((x, y))
                self.grid[x][y] = 'X'
                self.remaining_ships -= 1
                return True
        self.grid[x][y] = 'T'
        return False

def get_random_point(used_points):
    while True:
        x = random.randint(0, 5)
        y = random.randint(0, 5)
        if (x, y) not in used_points:
            return x, y

def main():
    player_board = Board([
        Ship([(0,0), (0,1), (0,2)]),
        Ship([(1,0), (1,1)]),
        Ship([(1,3), (1,4)]),
        Ship([(2,0)]),
        Ship([(2,2)]),
        Ship([(2,4)]),
        Ship([(2,5)]),
        Ship([(3,1)]),
        Ship([(3,3)]),
        Ship([(4,0)]),
        Ship([(4,2)]),
        Ship([(4,4)]),
        Ship([(4,5)]),
        Ship([(5,1)]),
        Ship([(5,3)])
    ])

    computer_board = Board([
        Ship([(0,0), (0,1), (0,2)]),
        Ship([(1,0), (1,1)]),
        Ship([(1,3), (1,4)]),
        Ship([(2,0)]),
        Ship([(2,2)]),
        Ship([(2,4)]),
        Ship([(2,5)]),
        Ship([(3,1)]),
        Ship([(3,3)]),
        Ship([(4,0)]),
        Ship([(4,2)]),
        Ship([(4,4)]),
        Ship([(4,5)]),
        Ship([(5,1)]),
        Ship([(5,3)])
    ])

    player_used_points = set()
    computer_used_points = set()

    while player_board.remaining_ships > 0 and computer_board.remaining_ships > 0:
        print("Player's Turn:")
        player_board.display()
        while True:
            try:
                x = int(input("Enter X coordinate (1-6): ")) - 1
                y = int(input("Enter Y coordinate (1-6): ")) - 1
                if (x, y) in player_used_points:
                    raise ValueError("You have already fired on this coordinate!")
                if not (0 <= x <= 5) or not (0 <= y <= 5):
                    raise ValueError("Coordinates out of range!")
                break
            except ValueError as ve:
                print(ve)
        
        player_used_points.add((x, y))
        if computer_board.check_hit(x, y):
            print("Hit!")
        else:
            print("Miss!")

        print("Computer's Turn:")
        while True:
            x, y = get_random_point(computer_used_points)
            computer_used_points.add((x, y))
            if player_board.check_hit(x, y):
                print(f"Computer hits at ({x+1}, {y+1})!")
            else:
                print(f"Computer misses at ({x+1}, {y+1})!")
                break

    if player_board.remaining_ships == 0:
        print("Congratulations! You won!")
    else:
        print("Computer wins! Better luck next time!")

if __name__ == "__main__":
    main()
