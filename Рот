import random

class Ship:
    def __init__(self, points):
        self.points = points
        self.hits = set()

    def hit(self, point):
        self.hits.add(point)

    def is_sunk(self):
        return len(self.hits) == len(self.points)

class Board:
    def __init__(self, ships):
        self.ships = ships
        self.size = 6
        self.grid = [['O' for _ in range(self.size)] for _ in range(self.size)]

    def place_ships(self):
        for ship in self.ships:
            for point in ship.points:
                x, y = point
                self.grid[x][y] = '■'

    def display(self):
        print("   | 1 | 2 | 3 | 4 | 5 | 6 |")
        for i in range(self.size):
            row = self.grid[i]
            print(f" {i+1} | {' | '.join(row)} |")

    def is_valid_move(self, x, y):
        return 0 <= x < self.size and 0 <= y < self.size and self.grid[x][y] not in ['X', 'T']

    def make_move(self, x, y):
        if not self.is_valid_move(x, y):
            raise ValueError("Неверный ход!")
        if self.grid[x][y] == '■':
            self.grid[x][y] = 'X'
            for ship in self.ships:
                if (x, y) in ship.points:
                    ship.hit((x, y))
                    if ship.is_sunk():
                        print("Вы потопили корабль!")
            return True
        else:
            self.grid[x][y] = 'T'
            return False

    def all_ships_sunk(self):
        return all(ship.is_sunk() for ship in self.ships)

def random_ship_points(length, board_size):
    while True:
        x = random.randint(0, board_size - 1)
        y = random.randint(0, board_size - 1)
        orientation = random.choice(['horizontal', 'vertical'])
        if orientation == 'horizontal':
            points = [(x, y+i) for i in range(length)]
        else:
            points = [(x+i, y) for i in range(length)]
        if all(0 <= px < board_size and 0 <= py < board_size for px, py in points):
            return points

def create_ships():
    ships = []
    lengths = [3, 2, 2, 1, 1, 1, 1]
    for length in lengths:
        points = random_ship_points(length, 6)
        ship = Ship(points)
        ships.append(ship)
    return ships

def main():
    player_board = Board(create_ships())
    computer_board = Board(create_ships())

    player_board.place_ships()

    while not player_board.all_ships_sunk() and not computer_board.all_ships_sunk():
        print("\nВаша Доска:")
        player_board.display()
        print("\nДоска Компьютера:")
        computer_board.display()

        try:
            x, y = map(int, input("\nСделайте ход в формате (x, y): ").split(','))
            x -= 1
            y -= 1
            if not player_board.make_move(x, y):
                print("Вы промахнулись!")
            
            computer_x = random.randint(0, 5)
            computer_y = random.randint(0, 5)
            while not computer_board.is_valid_move(computer_x, computer_y):
                computer_x = random.randint(0, 5)
                computer_y = random.randint(0, 5)
            if not computer_board.make_move(computer_x, computer_y):
                print("Компьютер промахнулся!")
        except ValueError as e:
            print(e)
    
    if player_board.all_ships_sunk():
        print("\nВы выиграли! Вы уничтожили все корабли компьютера.")
    else:
        print("\nКомпьютер выиграл! Он уничтожил все ваши корабли.")

if __name__ == "__main__":
    main()
