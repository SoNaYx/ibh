import random

class Ship:
    def __init__(self, points):
        self.points = points

class Board:
    def __init__(self, ships):
        self.ships = ships
        self.size = 6
        self.grid = [['O' for _ in range(self.size)] for _ in range(self.size)]
        for ship in self.ships:
            for point in ship.points:
                x, y = point
                self.grid[x][y] = '■'

    def display(self):
        print("  | 1 | 2 | 3 | 4 | 5 | 6 |")
        for i in range(self.size):
            row = " ".join(str(cell) for cell in self.grid[i])
            print(f"{i+1} | {row} |")

    def receive_shot(self, x, y):
        if self.grid[x][y] == '■':
            self.grid[x][y] = 'X'
            return True
        elif self.grid[x][y] == 'O':
            self.grid[x][y] = 'T'
            return False
        else:
            raise Exception("You've already shot here.")

def generate_ships():
    ships = []
    for size, quantity in [(3, 1), (2, 2), (1, 4)]:
        for _ in range(quantity):
            ship = generate_ship(size)
            ships.append(ship)
    return ships

def generate_ship(size):
    while True:
        orientation = random.choice(['horizontal', 'vertical'])
        if orientation == 'horizontal':
            x = random.randint(0, 5)
            y = random.randint(0, 5 - size)
            points = [(x, y+i) for i in range(size)]
        else:
            x = random.randint(0, 5 - size)
            y = random.randint(0, 5)
            points = [(x+i, y) for i in range(size)]

        if is_valid_ship(points):
            return Ship(points)

def is_valid_ship(points):
    for x, y in points:
        if not (0 <= x < 6 and 0 <= y < 6):
            return False
    for x, y in points:
        for dx in range(-1, 2):
            for dy in range(-1, 2):
                nx, ny = x + dx, y + dy
                if (nx, ny) in points:
                    return False
    return True

def main():
    player_board = Board(generate_ships())
    computer_board = Board(generate_ships())
    player_shots = set()

    while True:
        print("\nYour board:")
        player_board.display()
        print("\nComputer's board:")
        computer_board.display()

        try:
            x = int(input("Enter the row number to shoot: ")) - 1
            y = int(input("Enter the column number to shoot: ")) - 1
            if (x, y) in player_shots:
                raise Exception("You've already shot here.")
            player_shots.add((x, y))
            result = computer_board.receive_shot(x, y)
            if result:
                print("You hit a ship!")
            else:
                print("You missed.")
            
            if all(all(cell != '■' for cell in row) for row in computer_board.grid):
                print("Congratulations! You've sunk all of the computer's ships.")
                break
            
            # Computer's turn
            x = random.randint(0, 5)
            y = random.randint(0, 5)
            while (x, y) in player_shots:
                x = random.randint(0, 5)
                y = random.randint(0, 5)
            player_shots.add((x, y))
            result = player_board.receive_shot(x, y)
            if result:
                print("The computer hit your ship!")
            else:
                print("The computer missed.")
                
            if all(all(cell != '■' for cell in row) for row in player_board.grid):
                print("Sorry, the computer has sunk all of your ships.")
                break

        except ValueError:
            print("Please enter valid row and column numbers.")
        except Exception as e:
            print(e)

if __name__ == "__main__":
    main()
